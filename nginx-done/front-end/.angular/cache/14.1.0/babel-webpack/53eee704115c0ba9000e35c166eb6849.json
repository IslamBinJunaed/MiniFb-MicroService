{"ast":null,"code":"import _asyncToGenerator from \"/home/rudro/Dev/minifb/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {}\n\n  checkAuthentication() {\n    return _asyncToGenerator(function* () {\n      const response = yield fetch('http://localhost:5000', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      const {\n        isAuthenticated\n      } = yield response.json();\n      return isAuthenticated;\n    })();\n  }\n\n  requestAuthentication(email, password, type) {\n    return _asyncToGenerator(function* () {\n      const endpoint = 'http://localhost:5000/' + type;\n      const response = yield fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const {\n        isAuthenticated\n      } = yield response.json();\n      return isAuthenticated;\n    })();\n  }\n\n}\n\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)();\n};\n\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,qBAAP,CAA4B;EAChCC,eAAgB;;EAEHC,mBAAmB;IAAA;MAC9B,MAAMC,QAAQ,SAASC,KAAK,CAAC,uBAAD,EAA0B;QACpDC,MAAM,EAAE,KAD4C;QAEpDC,WAAW,EAAE;MAFuC,CAA1B,CAA5B;MAKA,MAAM;QAAEC;MAAF,UAA4BJ,QAAQ,CAACK,IAAT,EAAlC;MACA,OAAOD,eAAP;IAP8B;EAQ/B;;EAEYE,qBAAqB,CAChCC,KADgC,EAEhCC,QAFgC,EAGhCC,IAHgC,EAGpB;IAAA;MAEZ,MAAMC,QAAQ,GAAG,2BAA2BD,IAA5C;MAEA,MAAMT,QAAQ,SAASC,KAAK,CAACS,QAAD,EAAW;QACrCR,MAAM,EAAE,MAD6B;QAErCS,OAAO,EAAE;UACP,gBAAgB;QADT,CAF4B;QAKrCR,WAAW,EAAE,SALwB;QAMrCS,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBP,KADmB;UAEnBC;QAFmB,CAAf;MAN+B,CAAX,CAA5B;MAYA,MAAM;QAAEJ;MAAF,UAA4BJ,QAAQ,CAACK,IAAT,EAAlC;MACA,OAAOD,eAAP;IAjBY;EAkBb;;AAlC+B;;;mBAArBP;AAAqB;;;SAArBA;EAAqBkB,SAArBlB,qBAAqB;EAAAmB,YAFpB","names":["AuthenticationService","constructor","checkAuthentication","response","fetch","method","credentials","isAuthenticated","json","requestAuthentication","email","password","type","endpoint","headers","body","JSON","stringify","factory","providedIn"],"sourceRoot":"","sources":["/home/rudro/Dev/minifb/front-end/src/app/services/authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  constructor() {}\n\n  public async checkAuthentication() {\n    const response = await fetch('http://localhost:5000', {\n      method: 'GET',\n      credentials: 'include',\n    });\n\n    const { isAuthenticated } = await response.json();\n    return isAuthenticated;\n  }\n\n  public async requestAuthentication(\n    email: string,\n    password: string,\n    type: string\n  ) {\n    const endpoint = 'http://localhost:5000/' + type;\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n\n    const { isAuthenticated } = await response.json();\n    return isAuthenticated;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}